---

---

*
  transition: color .2s ease-in, background-color .2s ease-in, transform .4s
body
  --color: #0074d9
  --background: #111111

body
  margin: 0
  display: flex
  flex-direction: column
  align-items: center
  width: 100vw
  min-height: 100vh
  font-family: sans-serif
  color: var(--color)
  background: var(--background)
  overflow-x: hidden

a, a:visited
  color: unset

#wrap
  margin: auto
  width: 800px
  @media screen and (max-width: 800px)
    max-width: 800px
    width: 100%

header
  h1
    display: block
    text-align: center
    margin: 0

#info
  margin: 1em auto
  padding: 0 2ch
  max-width: 500px
  h2
    text-align: center
  details
    border: 1px solid var(--color)
    border-right-style: dashed
    border-left-style: dashed
    padding: .5em .5em 0
    margin: 1em 0
    transition: opacity 1s
    summary
      cursor: pointer
      font-weight: bold
      margin: -.5em -.5em 0
      padding: .5em
    &[open] summary
      margin: -.5em -.5em
  ul, ol
    list-style-position: inside
    padding: 0
  li >
    ul, ol
      padding-left: 2ch
    p
      display: inline

.footnotes
  font-size: 0.7em

.return
  text-align: center
  a
    display: inline-block
    background: var(--color)
    color: var(--background)
    text-decoration: none
    padding: .5ch 1ch
    font-size: 1.2em

nav
  &.external, &.site
  display: flex
  justify-content: center
  flex-wrap: wrap
  font-size: 15pt
  margin: 1em 0
  a
    margin: 0 1ch
  &.site
    a
      text-decoration: none
      background: var(--color)
      color: var(--background)
      padding: .5ch 1ch


.playsound
  text-decoration: underline
  cursor: pointer
  sup
    font-size: .5em

footer
  text-align: center
  margin: 2em 0 1em 0
  font-size: 0.7em

.item
  text-decoration: none
  img
    max-width: 100%
  .card
    background: var(--background)
  .front
    background-size: contain
  .back
    display: flex
    flex-direction: column
    background: var(--background)
    justify-content: space-between
    .name
      text-align: center
      margin: 2px 0
    .date
      padding: 0 5px
      text-align: center
    .description
      margin: 1ch
    .biglink
      text-align: center
      // margin-top: auto
      margin-bottom: 1em
      a
        display: inline-block
        background: var(--color)
        color: var(--background)
        font-size: 1.5em
        padding: .5ch 1ch
    .name, .date, .biglink
      a
        text-decoration: none

// 3D card setup
$grid-rows-3: round({{ site.data.grid.size }} / 3)
$grid-rows-2: round({{ site.data.grid.size }} / 2)
$grid-rows-1: {{ site.data.grid.size }}
#grid
  display: grid
  margin: 0 auto
  gap: 10px
  justify-content: center
  {% if site.data.grid.size == 0 %}
  display: none
  {% elsif site.data.grid.size == 1 %}
  grid-template: 250px / 250px
  {% elsif site.data.grid.size == 2 %}
  grid-template: repeat($grid-rows-2, 250px) / repeat(2, 250px)
  {% elsif site.data.grid.size == 3 %}
  grid-template: repeat($grid-rows-3, 250px) / repeat(3, 250px)
  {% endif %}
  {% if site.data.grid.size <= 2 %}
  @media screen and (max-width: 560px)
    grid-template: repeat($grid-rows-2, 180px) / repeat(2, 180px)
    font-size: .8em
  @media screen and (max-width: 410px)
    grid-template: repeat($grid-rows-1, 250px) / repeat(1, 250px)
  {% elsif site.data.grid.size <= 3 %}
  @media screen and (max-width: 820px)
    grid-template: repeat($grid-rows-2, 250px) / repeat(2, 250px)
  {% endif %}

.item
  perspective: 1000px
.item:hover, .item:focus
  .card
    &.even
      transform: rotateY(180deg)
    &.odd
      transform: rotateX(180deg)
.card
  &.even .back
    transform: rotateY(180deg)
  &.odd .back
    transform: rotateX(180deg)
.card
  width: 100%
  height: 100%
  position: relative
  transform-style: preserve-3d
.front, .back
  position: absolute
  height: 100%
  width: 100%
  backface-visibility: hidden

// bigger cube shit
// .cube_container
//   perspective: 300px
//   --side: 20px
//   width: var(--side)
//   height: var(--side)

// .cube
//   width: 100%
//   height: 100%
//   position: relative
//   transform-style: preserve-3d
//   // transform: translateZ(calc(-(var(--side)/2)))

// .cube_face
//   position: absolute
//   width: var(--side)
//   height: var(--side)
//   // backface-visibility: hidden

// .cube_face.face-front
//   transform: rotateY(  0deg) translateZ(calc(var(--side) / 2))
//   background: red
// .cube_face.face-right
//   transform: rotateY( 90deg) translateZ(calc(var(--side) / 2))
//   background: blue
// .cube_face.face-back
//   transform: rotateY(180deg) translateZ(calc(var(--side) / 2))
//   background: red
// .cube_face.face-left
//   transform: rotateY(-90deg) translateZ(calc(var(--side) / 2))
//   background: blue
// .cube_face.face-top
//   transform: rotateX( 90deg) translateZ(calc(var(--side) / 2))
//   background: green
// .cube_face.face-bottom
//   transform: rotateX(-90deg) translateZ(calc(var(--side) / 2))
//   background: green

// .cube.show-front
//   transform: rotateY(   0deg)
// .cube.show-right
//   transform: rotateY( -90deg)
// .cube.show-back
//   transform: rotateY(-180deg)
// .cube.show-left
//   transform: rotateY(  90deg)
// .cube.show-top
//   transform: rotateX( -90deg)
// .cube.show-bottom
//   transform: rotateX(  90deg)
